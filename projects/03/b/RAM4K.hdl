// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[9..11],
        a=ramALoad, b=ramBLoad, c=ramCLoad, d=ramDLoad,
        e=ramELoad, f=ramFLoad, g=ramGLoad, h=ramHLoad);

    RAM512(in=in, load=ramALoad, address=address[0..8], out=ramAOut);
    RAM512(in=in, load=ramBLoad, address=address[0..8], out=ramBOut);
    RAM512(in=in, load=ramCLoad, address=address[0..8], out=ramCOut);
    RAM512(in=in, load=ramDLoad, address=address[0..8], out=ramDOut);
    RAM512(in=in, load=ramELoad, address=address[0..8], out=ramEOut);
    RAM512(in=in, load=ramFLoad, address=address[0..8], out=ramFOut);
    RAM512(in=in, load=ramGLoad, address=address[0..8], out=ramGOut);
    RAM512(in=in, load=ramHLoad, address=address[0..8], out=ramHOut);

    Mux8Way16(a=ramAOut, b=ramBOut, c=ramCOut, d=ramDOut,
              e=ramEOut, f=ramFOut, g=ramGOut, h=ramHOut,
              sel=address[9..11], out=out);
}
